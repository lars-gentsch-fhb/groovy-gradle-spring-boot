buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:1.1.8.RELEASE")
	}
}

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'application'

version = 1.0
description = 'Little Spring Boot project to play around.'
buildDir = 'target'

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.3.6'

    compile('org.springframework.boot:spring-boot-starter-web:1.1.8.RELEASE') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    compile('org.springframework.boot:spring-boot-starter-jetty:1.1.8.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-actuator:1.1.8.RELEASE')

    testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
    testCompile 'junit:junit:4.11'
}

jar {
    baseName = 'gs-spring-boot'
    version =  '0.1.0'
}

processResources {
	expand(project.properties)
}

test {
	include "**/*Test*"
	reports.html.enabled = false
	afterTest { desc, result ->
		println "Executing '${desc.name}' [${desc.className}] with result: ${result.resultType}"
	}
}

task componentTests(type: Test, dependsOn: test) {
	include "**/*CT*"
	reports.html.enabled = false
	afterTest { desc, result -> 
        println "Executing '${desc.name}' [${desc.className}] with result: ${result.resultType}"
    }
}

task allTests(type: TestReport, dependsOn: ['test', 'componentTests']) {
	doFirst {
		gradle.startParameter.continueOnFailure = true
	}
	destinationDir = file("$buildDir/reports/allTests")
	tasks.withType(Test) {
		reportOn it
	}
}

check {
	dependsOn = ['test', 'componentTests', 'allTests']
}
